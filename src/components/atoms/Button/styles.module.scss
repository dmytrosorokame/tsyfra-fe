@use '../../../styles/typography/buttonLabel.scss' as buttonLabel;

// Base styles for the container
.container {
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: center;
  padding: 16px;
  border-radius: 12px;
  background-color: var(--primary75Color);
  cursor: pointer;
  gap: 12px;
  transition: all 0.3s ease-in-out;

  &.small {
    padding: 10px;
  }

  &:hover {
    background-color: var(--primary100Color);
  }

  &.outlined {
    border: 1px solid var(--strokeColor);
    background-color: var(--whiteColor);

    &:hover {
      border-color: var(--primary25Color);
      background-color: var(--primary10Color);
    }
  }

  &.disabled {
    border: 1px solid var(--grayColor);
    background-color: var(--grayColor);
  }

  &.disabled.outlined {
    background-color: var(--whiteColor);

    &:hover {
      border-color: var(--grayColor);
      background-color: var(--whiteColor);
    }
  }
}

.label {
  @include buttonLabel.buttonLabel;

  color: var(--whiteColor);
  transition: color 0.3s ease-in-out;

  .container.disabled & {
    color: var(--black75Color);
  }

  .container.outlined & {
    color: var(--primary75Color);
  }

  .container.disabled.outlined & {
    color: var(--black75Color);
  }

  .container.outlined:hover & {
    color: var(--primary100Color);
  }

  .container.disabled.outlined:hover & {
    color: var(--black75Color);
  }
}

.icon svg {
  width: 16px;
  height: 16px;

  path {
    fill: var(--whiteColor);
    transition: fill 0.3s ease-in-out;

    .container.outlined & {
      fill: var(--primary75Color);
    }

    .container.disabled & {
      fill: var(--black50Color);
    }

    .container.outlined:hover & {
      fill: var(--primary100Color);
    }

    .container.disabled.outlined & {
      fill: var(--black50Color);
    }

    .container.disabled.outlined:hover & {
      fill: var(--black50Color);
    }
  }
}